// Program Name: BUBBLES
// Author(s): SomeCoolGuy
// Description: Bubbles!

/* Keep these headers */
#include <tice.h>

/* Standard headers - it's recommended to leave them included */
#include <math.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <graphx.h>
#include <keypadc.h>
#include "pixelate.h"
#include "bubble.h"
#include "gfx/bubble.h"
#ifndef TILE_WIDTH
#define TILE_WIDTH 16
#endif
#ifndef TILE_HEIGHT
#define TILE_HEIGHT 16
#endif
#define LBOUND -85
#define RBOUND 85
#define gfx_PrintUIntXY(i,length,x,y) gfx_SetTextXY(x,y);\
gfx_PrintUInt(i,length);
#define gfx_PrintIntXY(i,length,x,y) gfx_SetTextXY(x,y);\
gfx_PrintInt(i,length);
void game(void) {
    shooter_t * shooter;
    grid_t * grid;
    shooter = (shooter_t *) malloc(sizeof(shooter_t));
    shooter->x = 160 - (TILE_WIDTH>>1);
    shooter->y = 220 - (TILE_HEIGHT>>1);
    shooter->angle = 0;
    shooter->pal_index = 39;
    grid->x = 160 - ((TILE_WIDTH>>1) * 7);
    grid->y = 0;
    grid->ball_radius = TILE_WIDTH;
    grid->cols = 7;
    grid->rows = 14;
    grid->width = (TILE_WIDTH * grid->cols) + TILE_WIDTH>>1;
    grid->height = (TILE_HEIGHT * grid->rows);
    grid->bubbles = (bubble_t *) malloc(98*sizeof(bubble_t));
    init_grid(grid);
    gfx_palette[255] = 0xFFFF;
    gfx_Begin();
    gfx_SetDrawBuffer();
    while (!(kb_Data[6] & kb_Clear)) {
        kb_Scan();
        gfx_FillScreen(255);
        if (kb_Data[7] & kb_Left) {
            if (shooter->angle > -85)
                shooter->angle-=5;
        }
        if (kb_Data[7] & kb_Right) {
            if (shooter->angle < 85)
                shooter->angle+=5;
        }
        renderGrid(grid);
        renderShooter(shooter);
        gfx_BlitBuffer();
    }
    gfx_End();
}
